
/*
                             Formula de Pontos
 
   Modificadores Bonus por Ranking:
		Casual:
        Novato:
			+20% de dano contra rankings acima.
			5% de chance de converter dano infligido em cura
			Abater um alvo recupera toda a vida e mana
			
		Veterano:
			+15% de dano contra rankings acima.
			3% de chance de converter dano infligido em cura
			Abataer um alvo recupera toda a vida.
			
		"Ouro":
			+10% de dano contra rankings acima.
			1% de chance de converter dano infligido em cura
			Abater um alvo recupera toda a mana
			
		Pilar:
			+5% de dano contra rankings acima.
			Abater alvos faz com que se perca 5% da vida e mana atual
		
		"Diamante":
			-5% de dano contra contra rankings inferiores
	
   Modificadores de Batalha:
		Casual:
		Bronze:
		Prata:
			Pode batalhar com todos menos platina e diamante
			
		Ouro:
			Pode batalhar com todos.
			
		Diamante:
		Platina:
			Pode batalhar com todos menos Bronze e Prata
			
			Pode batalhar com todos menos Bronze e Prata
	
	Simples:
		1 Abate = 10 Pontos
		1 Morte = -3 ~~ -5 Pontos
	
   Abates Modificadores:
		Alvo em ranking inferior += - ( 2 * Diferença )
		Alvo em Ranking maior += ( Diferença )
		Alvo É Ranking 4 ou 5 += ( 4 )
		Alvo está no top 3 += 10
		5 Abates Consecutivos sem morrer ou teleportar += 2 e entra em modo shutdown
		7 Abates Consecutivos sem morrer ou teleportar += 4
		10 Abates Consecutivos sem morrer ou teleportar += 7
		15 Abates Consecutivos sem morrer ou teleportar + 10 
		20 Abates Consecutivos sem morrer ou teleportar += 15
		Eliminar um mesmo alvo em um intervalo de 3 minutos torna os pontos obtidos /= 2
		Eliminar um mesmo alvo em um intervalo de 1 minuto torna os pontos obtidos -= 7
		Shutdown alvo += Total abates / 2
		
	Mortes Modificadores:
		Killer em Ranking inferior -= Diferença
		Killer é Ranking 4 ou 5 -= + rand(3, 5)
		Morto é Ranking 4 -= rand(1,30)
		Morto é ranking 5 -= rand(20,50)
		Diamantes não dão pontos para Bronze e Prata e também não
		
*/


// PVP_RANKS
// ID,NOME,SLOT

phtownall,203,186,4	Script	Arena RagnaGhostz	10084,{

	.@n$ = "[^C71585Gerente da Arena^000000]";
	
	cutin "ep15_tatio01",2;
	
	.@debug = 0;

	if( .@debug )
	{
		mes .@n$;
		mes "Debug!";
		close2;
		goto L_debug;
	}

	mes .@n$;
	mes "Seja bem-vind" + ( Sex ? "o" : "a" ) + ".";
	mes "Estou às suas ordens.";
	mes "___________________________________";
	mes "^6B8E23Ranking Atual^000000 » " + .rank_name$[PVP_RANKING];
	mes "^B8860BPontos^000000 » " + PVP_POINTS;
	mes "^B22222Abates^000000 » " + PVP_KILLS;
	mes "^778899Mortes^000000 » " + PVP_DEATHS;
	mes "^8B814CMaior Streak^000000 » " + PVP_MAXSTREAK;
	mes "¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯";
	
	switch( select( "^FFB90F»^000000 Entrar na Arena", "^2E8B57»^000000 Ver Ranking", "^483D8B»^000000 Ver Estatísticas", "^228B22»^000000 Modificar Anunciador", "^B03060»^000000 Regras da Arena Rankeada" ) )
	{
		case 1:
			next;
			mes .@n$;
			
			if( BaseLevel < 300 )
			{
				mes "Desculpa, não aceitamos pessoas fracas em nossa arena.";
				mes "Volte daqui " + ( 300 - BaseLevel ) + " níveis.";
				close2;
				cutin "ep15_tatio01",255;
				end;
			}
			
			if( !#PVPRULES )
			{
				mes "Antes de entrar, que tal dar uma lida no funcionamento da arena e do rankeamento?";
				next;
				goto L_Rules;
			}
			
			for( .@i = 0; .@i < getarraysize( .ranked_aname$ ); .@i++ )
				.@menu$ += sprintf( "%s (%d Jogadores)", .ranked_aname$[.@i], getmapusers( .ranked_maps$[.@i] ) ) + ":";
			
			.@option = select( .@menu$ );
			
			.@option--;
						
			.@announce$ = sprintf( "%s [%s - %s] acaba de entrar na arena [%s]",
			              ( Sex ? "O Jogador " : "A Jogadora " ),
						  strcharinfo(0),
                          .rank_name$[PVP_RANKING],
						  .ranked_aname$[.@option] );
						  
			announce .@announce$,bc_map,.isranked[.@option] ? 0xEEEE00 : 0x00FF7F,FW_NORMAL,18;
			
			npctalk "Boa sorte, " + strcharinfo(0);
			warp .ranked_maps$[.@option],0,0;
			end;
			
		case 2:
			next;
			mes "[^8B0000TOP's 100^000000]";
		
			.@total = query_sql(
			          "SELECT c.name, c.class,       " +
					  "       pp.ranking, pp.pontos, " +
					  "       pp.abates,  pp.mortes, " +
					  "       pp.recabates           " +
			          "  FROM `pvp_player` pp        " +
					  " INNER JOIN `char` c ON c.char_id = pp.char_id " +
					  " ORDER BY pp.ranking DESC,    " +
					  "          pp.pontos DESC      " +
					  " LIMIT 100 ",
			          .@name$,   .@class, 
					  .@ranking, .@pontos,
					  .@abates,  .@mortes,
					  .@recabates );
			
			mes " ";
			
			for( .@i = 0; .@i < .@total; .@i++ )
			{
				mes "[Posição " + ( .@i + 1 ) + "]";
				if( .@name$[.@i] == strcharinfo(0) )
				{
					mes "^FF0000Nome »" + .@name$[.@i];
					mes "Ranking » " + .rank_name$[PVP_RANKING];
					mes "Classe » " + jobname( .@class[.@i] );
					mes "Pontos » " + .@pontos[.@i] + "^000000";
				}
				else
				{
					mes "^8B4513Nome^000000 »" + .@name$[.@i];
					mes "^6B8E23Ranking^000000 » " + .rank_name$[PVP_RANKING];
					mes "^8B658BClasse^000000 » " + jobname( .@class[.@i] );
					mes "^B8860BPontos^000000 » " + .@pontos[.@i];
				}
				mes "¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯";
			}
			close2;
			cutin "ep15_tatio01",255;
			end;
			
		case 3:
			mes "EM BREVE NAS MELHORES BANCAS";
			close2;
			cutin "ep15_tatio01",255;
			end;
			
		case 4:
			next;
			mes .@n$;
			mes "Você deseja trocar o seu anunciador de abates?";
			mes " ";
			mes "^8B4513Anunciador Atual^000000 » " + .anunci_sound$[PVP_ANNOUNCER];
			switch( select( "Sim", "Anunciador?" ) )
			{
				case 1:
					for( .@i = 0; .@i < getarraysize( .anunciadores$ ); .@i++ )
						.@menu$ += .anunciadores$[.@i] + ":";
					
					L_Anunciador:
					next;
					mes .@n$;
					mes "Selecione qual anunciador deseja.";
					
					.@option = select( .@menu$ );
			
					.@option--;
					
					if( .@option == PVP_ANNOUNCER )
					{
						mes .@n$;
						mes "Acho que você tem problema de cabeça, você já está com este anunciador configurado!";
						close2;
						cutin "ep15_tatio01",255;
						end;	
					}
					
					soundeffect sprintf( "%s_1.wav", .anunci_sound$[.@option] ),0;
					
					next;
					mes .@n$;
					mes "Muito bem, é este que você quer?";
					
					if( select( "Não", "Sim" ) == 1 ) goto L_Anunciador;
					
					if( countitem( 12221 ) == 0 )
					{
						next;
						mes .@n$;
						mes "Sinto muito, para que eu possa efetuar esta troca preciso que você tenha em mãos um <ITEM>Trocador de Anunciador<INFO>12221</INFO></ITEM>.";
						close2;
						cutin "ep15_tatio01",255;
						end;
					}
					
					next;
					mes .@n$;
					mes "Atenção, um <ITEM>Trocador de Anunciador<INFO>12221</INFO></ITEM> será consumido de seu inventário.";
					
					if( select( "Confirmar" ) == 1 )
					{
						delitem 12221,1;
						next;
						mes .@n$;
						mes "Certo, seu novo anunciador foi configurado!";
						PVP_ANNOUNCER = .@option;
						
						query_sql( "UPDATE `pvp_player`  " +
								   "   SET `anunciador` = " + .@option +
								   " WHERE `char_id` = " + getcharid(0) );
					}
					close2;
					cutin "ep15_tatio01",255;
					end;
					
				case 2:
					next;
					mes .@n$;
					mes "Sempre que você abate um outro jogador nas Arenas, um anunciador irá falar uma frase de acordo com a sequência de abates do momento.";
					next;
					mes .@n$;
					mes "É uma boa forma de se destacar. Avise quando quiser trocar.";
					close2;
					cutin "ep15_tatio01",255;
					end;
			}
			
		case 5:
			L_Rules:
			#PVPRULES = 1;
			next;
			mes .@n$;
			mes "Certo, que tópico deseja saber.";
			next;
			
			switch( select( "Rankings", "Ajustes de Batalha", "Recompensas", "Compreendi Tudo" ) )
			{
				case 1:
					next;
					mes .@n$;
					mes "Existem " + getarraysize( .rank_name$ ) + " rankings em RagnaGhostz.";
					next;
					mes .@n$;
					mes "[ ^FF3030Ranking^000000 | ^FFC125Abates^000000 | ^B8860BCapacidade^000000 ]";
					for( .@i = 0; .@i < getarraysize( .rank_name$ ); .@i++ )
						mes sprintf( "[ %s | %d | %d ]", .rank_name$[.@i], .rank_mte[.@i], .rank_slot[.@i] );

					mes " ";
					mes "^FF3030Ranking^000000: Nome do Ranking";
					mes "^FFC125Abates^000000: Quantidade necessária para poder começar a tentar entrar no Ranking.";
					mes "^FF3030Capacidade^000000: Máximo de Jogadores que podem entrar no Ranking.";
					
					next;
					mes .@n$;
					mes "Os Rankings são atualizados a cada 10 minutos, então não se assuste se conseguir os pontos e abates necessários e não ser promovido.";
					goto L_Rules;
					
				case 2:
					next;
					mes .@n$;
					mes "A Arena possui alguns ajustes de acordo com o Ranking para uma melhor experiência.";
					next;
					mes .@n$;
					mes "^FF3030»^000000 Modificadores de Batalha";
					mes " ";
					mes "[Casual]";
					mes "[Novato]";
					mes "       » ^CD0000+20%^000000 de dano contra Rankings superiores.";
					mes "       » ^66CD00+5%^000000 de chance de converter dano infligido em cura.";
					mes "       » Abater alvos faz com que toda a vida e mana sejam recuperadas.";
					mes "       » Não podem entrar em combate contra [Pilar] e [Lenda].";
					mes "¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯";
					mes "[Veterano]";
					mes "       » ^CD0000+15%^000000 de dano contra Rankings superiores.";
					mes "       » ^66CD00+3%^000000 de chance de converter dano infligido em cura.";
					mes "       » Abater alvos faz com que toda a vida seja recuperada.";
					mes "       » Não podem entrar em combate contra [Lenda].";
					mes "¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯";
					mes "[Elite]";
					mes "       » ^CD0000+10%^000000 de dano contra Rankings superiores.";
					mes "       » ^66CD00+1%^000000 de chance de converter dano infligido em cura.";
					mes "       » Abater alvos faz com que toda a mana seja recuperada.";
					mes "       » Podem entrar em combate com todos os Rankings.";
					mes "¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯";
					mes "[Pilar]";
					mes "       » ^CD0000+5%^000000 de dano contra Rankings superiores.";
					mes "       » Abater alvos faz com que se perca 5% da vida e mana atual.";
					mes "       » Não podem entrar em combate contra [Casual] e [Novato].";
					mes "¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯";
					mes "[Lenda]";
					mes "       » ^CD0000-5%^000000 de dano contra Rankings inferiores.";
					mes "       » Abater alvos faz com que se perca 5% da vida e mana atual.";
					mes "       » Não podem entrar em combate contra [Casual], [Novato] e [Veterano].";
					goto L_Rules;
					
				case 3:
					next;
					mes .@n$;
					mes "As recompensas são dadas de acordo com a colocação no Ranking às 22:00 de todo Domingo.";
					mes "O Ranking é resetado a cada 3 semanas.";
					mes " ";
					mes "[Novato]";
					mes "       » 500 Pontos de Cash.";
					mes "       » 1% de Chance de Obter VIP por 1 semana.";
					mes "       » 10 Pontos de Maestrias de Evento.";
					mes "¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯";
					mes "[Veterano]";
					mes "       » 750 Pontos de Cash.";
					mes "       » 3% de Chance de Obter VIP por 1 semana.";
					mes "       » 20 Pontos de Maestrias de Evento.";
					mes "¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯";
					mes "[Elite]";
					mes "       » 1200 Pontos de Cash.";
					mes "       » 5% de Chance de Obter VIP por 1 semana.";
					mes "       » 30 Pontos de Maestrias de Evento.";
					mes "¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯";
					mes "[Pilar]";
					mes "       » 5000 Pontos de Cash.";
					mes "       » 10% de Chance de Obter VIP por 1 semana.";
					mes "       » 50 Pontos de Maestrias de Evento.";
					mes "¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯";
					mes "[Lenda]";
					mes "       » 15000 Pontos de Cash.";
					mes "       » VIP por 1 semana.";
					mes "       » 100 Pontos de Maestrias de Evento.";
					next;
					mes .@n$;
					mes "Mas lembre-se, se você não se conectar antes do próximo sorteio, perderá sua recompensa!";
					mes "Então tente durante a semana se conectar para garantir receber a recompensa entregue no Domingo!";
					goto L_Rules;
					
				case 4:
					next;
					mes .@n$;
					mes "Boa sorte na Arena!";
					break;
			}
			break;
	}
	close2;
	cutin "ep15_tatio01",255;
	end;
		
	end;	
	// Recompensas são entregues aos Domingos - 22:00
	L_debug:
		.@force_prize = 1;

	OnMinute00:
		if( .@force_prize || ( gettime(DT_HOUR) == 22 && gettime(DT_DAYOFWEEK) == SUNDAY ) )
		{
			$TOTAL_PRIZES++;
			.@prize_give = 1;

			if( $TOTAL_PRIZES < 3 )
				announce "[Ranking PVP]: A Premiação foi entregue a todos os nossos guerreiros! Obrigado a todos que estão participando de nossa Arena!",0;
			else
			{
				.@ranking_reset = 1;
				$TOTAL_PRIZES = 0;
				announce "[Ranking PVP]: O Ranking foi resetado e todos os prêmios foram entregues! Agora é a chance de conseguir chegar ao Topo!",0;
			}

			query_sql( "TRUNCATE TABLE `pvp_prizetoget`");
		}
	OnMinute10:
	OnMinute20:
	OnMinute30:
	OnMinute40:
	OnMinute50:
	
		query_sql( "UPDATE `pvp_player`  " +
		           "   SET `ranking` = -1 " );

		for( .@i = getarraysize( .rank_name$ ) - 1; .@i > -1; .@i-- )
		{
			//announce "Ranking " + .@i,0;
			
			.@total = query_sql(
			          "SELECT pp.char_id,              " +
					  "       pp.ranking,   pp.pontos, " +
					  "       pp.abates                " +
			          "  FROM `pvp_player` pp          " +
					  " WHERE pp.ranking = -1          " +
					  " ORDER BY pp.pontos DESC        ",
			          .@cid,       
					  .@ranking, .@pontos,
					  .@abates );
			
			.@total_players += .@total;
			
			.@add = 0;
			
			while( .@total > 0 )
			{
				.@total--;
				
				if( .@i > RANKING_NOVATO && .@add == .rank_slot[.@i] ) continue;
				if( .@abates[.@add] < .rank_mte[.@i] ) continue;
								
				.@query$ = "UPDATE `pvp_player` " +
				           "   SET `ranking`  = " + .@i +
						   " WHERE `char_id`  = " + .@cid[.@add];
						   
				query_sql( .@query$ );
				
				if( ischaronline( .@cid[.@add] ) )
				{
					if( readparam( PVP_RANKING, .@cid[.@add] ) != .@i && !.@ranking_reset )
					{
						dispbottom "--------------------------------------------------",0x6495ED,.@cid[.@add];
						dispbottom "Parabéns, você agora está no Ranking " + .rank_name$[.@i] + "!",0x20B2AA,.@cid[.@add];
						dispbottom "--------------------------------------------------",0x6495ED,.@cid[.@add];
						
						specialeffect2 68,AREA,strcharinfo(0,.@cid[.@add]);
						
						changetitle( .@i, .@cid[.@add] );
						
						set( PVP_RANKING, .@i, .@cid[.@add] );
						
						singlesoundeffect( "RANKING_UP.wav", .@cid[.@add] );
					}

					if( .@prize_give && .@i > 0 ) // Casuais não recebem premiação
					{
							set( #CASHPOINTS, .rank_prizecash[.@i], .@cid[.@add] );

							.@getvip = ( rand( 1, .rank_prizevipchance[.@i] ) >= rand( 1, 100 ) );

							if( .@getvip && getgroupid() != 99 )
								vip_time 10080, strcharinfo(0, .@cid[.@add]);
							
							dispbottom "--------------------------------------------------",0x6495ED,.@cid[.@add];
							dispbottom "                    Premiação PVP                 ",0x6495ED,.@cid[.@add];
							dispbottom "                                        ",0x6495ED,.@cid[.@add];

							if( .@ranking_reset )
							{
								dispbottom "Seu Ranking foi resetado para [" + .rank_name$[0] + "]",0x6495ED,.@cid[.@add];
								changetitle( 0, .@cid[.@add] );

								set( PVP_RANKING, 0, .@cid[.@add] );

								set( PVP_POINTS, 0, .@cid[.@add] );
								set( PVP_KILLS, 0, .@cid[.@add] );
								set( PVP_DEATHS, 0, .@cid[.@add] );
								set( PVP_MAXSTREAK, 0, .@cid[.@add] );
							}

							dispbottom "Cash Recebido: " + .rank_prizecash[.@i],0x6495ED,.@cid[.@add];
							dispbottom "Recebeu 1 Semana VIP: " + ( .@getvip ? "SIM" : "NÃO" ),0x6495ED,.@cid[.@add];
							dispbottom "Pontos de Maestrias de Evento: " + .rank_prizemastery[.@i],0x6495ED,.@cid[.@add];
							dispbottom "--------------------------------------------------",0x6495ED,.@cid[.@add];
					}
				}
				else if( .@prize_give )
					query_sql( sprintf( "INSERT INTO `pvp_prizetoget` ( `char_id`, `cash`, `vip_chance`, `mastery` ) VALUES ( %d, %d, %d, %d )", .@cid[.@add], .rank_prizecash[.@i], .rank_prizevipchance[.@i], .rank_prizemastery[.@i] ) );
				
				.@add++;
			}
		}

		if( .@ranking_reset )
			query_sql( "UPDATE `pvp_player`     " +
		               "   SET `ranking` = 0,   " +
		               "       `pontos` = 0,    " +
		               "       `abates` = 0,    " +
		               "       `mortes` = 0,    " +
		               "       `recabates` = 0, " +
		               "       `recmortes` = 0  " );
		
		debugmes "Ranking PVP","O Ranking foi atualizado para (" + .@total_players + ") jogadores.";
	end;
	
	OnInit:
		// mte = Min to Enter, ou seja; A quantidade de pontos para poder entrar no ranking
		.@query$ = "SELECT  r.id, r.nome, r.slot,            r.mte,          " +
		           "        r.prize_cash, r.prize_vipchance, r.prize_mastery " +
		           "  FROM `pvp_ranks` r                                     ";
					   
		.@c = query_sql( .@query$, .@id, .@nome$, .@slot, .@mte, .@prize_cash, .@prize_vipchance, .@prize_mastery );
		
		debugmes "Ranking PVP","Carregado (" + .@c + ") Rankings.";

		for( .@i = 0; .@i < .@c; .@i++ )
		{
			.rank_name$[.@i] = .@nome$[.@i];
			.rank_slot[.@i]  = .@slot[.@i];
			.rank_mte[.@i]   = .@mte[.@i];

			.rank_prizecash[.@i] = .@prize_cash[.@i];
			.rank_prizevipchance[.@i] = .@prize_vipchance[.@i];
			.rank_prizemastery[.@i] = .@prize_mastery[.@i];
			
			debugmes "Ranking - " + .rank_name$[.@i],sprintf( "Vagas: %d / MTE: %d ", .rank_slot[.@i], .rank_mte[.@i] );
		}
		
		.ranked_aname$[0] = "Arena Rankeada";
		.ranked_maps$[0]  = "guild_vs5";
		.isranked[0]      = 1;
		
		.ranked_aname$[1] = "Arena de Treino";
		.ranked_maps$[1]  = "guild_vs3";
		.isranked[1]      = 0;
		
		for( .@i = 0; .@i < getarraysize( .ranked_maps$ ); .@i++ )
		{
			setmapflag .ranked_maps$[.@i],MF_PVP;
			
			if( .isranked[.@i] )
			{
				setmapflag .ranked_maps$[.@i],MF_PVP_NOPARTY;
				setmapflag .ranked_maps$[.@i],MF_PVP_NOPARTY;
				setmapflag .ranked_maps$[.@i],MF_PVP_NOGUILD;
				setmapflag .ranked_maps$[.@i],MF_NOWARP;
			}
			else
			{
				setmapflag .ranked_maps$[.@i],MF_PVP_NOCALCRANK;
			}
		}
		
		.anunciadores$[0] = "Padrão";
		.anunci_sound$[0] = "DEFAULT";
		
		.anunciadores$[1] = "Stanley";
		.anunci_sound$[1] = "STANLEY";
		
		.anunciadores$[2] = "Unreal";
		.anunci_sound$[2] = "UNREAL";
		
		.anunciadores$[3] = "Lina";
		.anunci_sound$[3] = "LINA";
		
		.anunciadores$[4] = "Tóxicman";
		.anunci_sound$[4] = "TOXIC";
		
		.anunciadores$[5] = "Diva";
		.anunci_sound$[5] = "DIVA";
		
		.anunciadores$[6] = "Halo";
		.anunci_sound$[6] = "HALO";
		end;

	OnPCKillEvent:
		.@debug = 1;
		
		if( inarray( .ranked_maps$, strcharinfo(3) ) < 0 || PVP_KILLED <= 0 ) end;
		
		.@victim          = PVP_KILLED;
		.@victim_ranking  = readparam( PVP_RANKING, .@victim );
		.@victim_position = readparam( PVP_POSITION, .@victim ); 
		
		.@killer         = getcharid(0);
		.@killer_ranking = PVP_RANKING;
		
		PVP_STREAK++;
		PVP_KILLS++;
		
		.@killer_streak = PVP_STREAK;
		
		// Killer
		// Recebe 10 pontos
		.@points = 10;
		
		if( getgroupid() == 99 )
		{
			dispbottom ".@victim_ranking = " + .@victim_ranking;
			dispbottom ".@killer_ranking = " + .@killer_ranking;
		}
		
		// Se a Vítima for de Ranking Inferior, .@points -= ( 2 * Diferença de Ranking )
		if( .@victim_ranking < .@killer_ranking )
			.@points -= 2 * ( .@killer_ranking - .@victim_ranking );
		
		// Se a Vítima for de Ranking Maior, .@points += Diferença de Ranking
		if( .@victim_ranking > .@killer_ranking )
			.@points += ( .@victim_ranking - .@killer_ranking );
		
		// Vítima é ranking 4 ou 5? Se sim, .@points += Ranking
		if( .@victim_ranking >= 4 )
			.@points += .@victim_ranking;
			
		// Vítima está no TOP 5 do seu elo? Se sim, .@points += rand( 5, 12 )
		if( .@victim_position <= 5 && .@victim_position > 0 )
			.@points += rand( 5, 12 );
		
		.@tick = ( gettimetick(2) - @TIME_KILLED[.@victim] );
		
		// Eliminar o mesmo alvo em período de 2 a 3 minutos faz com que os pontos seja dividido por 2.
		// Eliminar o mesmo alvo em período de 1 minuto faz com que o KillStreak não aumente e fixa o ponto em .@points = 3
		if( .@tick < 180 )
		{
			if( getgroupid() == 99 ) dispbottom "Aplicado Punição de Killed";
			
			.@points = .@tick <= 60 ? 3 : ( .@points / 2 );
		}
		else
		{
			// Abates Consecutivos sem morrer ou deixar a arena? .@points += x
			// >= 5  -> x = 2
			// >= 7  -> x = 4
			// >= 10 -> x = 7
			// >= 15 -> x = 10
			// >= 20 -> x = 15
			if( .@killer_streak >= 20 )
				.@points += 15;
			else if( .@killer_streak >= 15 )
				.@points += 10;
			else if( .@killer_streak >= 10 )
				.@points += 7;
			else if( .@killer_streak >= 7 )
				.@points += 4;
			else if( .@points >= 5 )
				.@points += 2;
		}
		
		@TIME_KILLED[.@victim] = gettimetick(2);
		
		// Se os pontos forem menor que 0, .@points = 0.
		if( .@points < 0 )
			.@points = 0;

		message strcharinfo(0),"Obtido (" + .@points + ") pontos";
		
		.@query$ = "UPDATE `pvp_player`          " +
				   "   SET `pontos` = `pontos` + " + .@points + ", " +
				   "       `abates` = " + PVP_KILLS + " " +
		           ( PVP_MAXSTREAK < MAX_STREAK ?
				   "       ,`recabates` = " + PVP_STREAK : " " ) +
				   " WHERE `char_id`= " + .@cid[.@z];
						   
		query_sql( .@query$ );
		
		if( PVP_RANKING <= RANKING_NOVATO )
			percentheal 100,100;
		else if( PVP_RANKING == RANKING_VETERANO )
			percentheal 100,0;
		else if( PVP_RANKING == RANKING_ELITE )
			percentheal 0,100;
		else
			percentheal -5,0;
		
		.@a = PVP_STREAK >= 14 ? 14 : PVP_STREAK;
		
		soundeffect sprintf( "%s_%d.wav", .anunci_sound$[PVP_ANNOUNCER], .@a ),0;
		
		.@announce$ = sprintf( "[%s][%s][%s] acaba de abater [%s][%s][%s] e está com %d %s!!",
			            strcharinfo(0),
                        .rank_name$[PVP_RANKING],
						jobname( Class ),
						strcharinfo( 0, .@victim ),
						readparam( PVP_RANKING, .@victim ),
						jobname( readparam( Class ) ),
						.@a,
						.@a == 1 ? "abate" : "abates consecutivos" );
						  
		mapannounce strcharinfo(3),.@announce$,bc_map,"0xFFCE00";

		// Agora vamos tirar os pontos de quem morre.
		.@points -= rand( 3, 5 );
		
		// Se o Ranking do Assassino for menor do que o morto .@points -= Diferença
		if( PVP_RANKING < .@victim_ranking )
			.@points -= ( .@victim_ranking - PVP_RANKING );
		
		// Se o Morto é Ranking Pilar .@points -= rand( 1, 15 )
		if( .@victim_ranking == RANKING_PILAR )
			.@points -= rand( 1, 15 );
		else if( .@victim_ranking == RANKING_LENDA )
			.@points -= rand( 15, 30 );
		
		// Se o Assassino for Ranking >= RANKING_PILAR, .@points += rand( 1, 5 )
		if( PVP_RANKING >= RANKING_PILAR )
			.@points += rand( 1, 5 );
		
		if( .@points <= 0 )
			.@points = 5;

		@query$ = "UPDATE `pvp_player`          " +
				   "   SET `pontos` = `pontos` - " + .@points + ", " +
				   "       `mortes` = `mortes` - 1" +
				   " WHERE `char_id`= " + .@cid[.@z];
		
		message strcharinfo(0, .@victim),"Perdeu (" + .@points + ") pontos";
		end;
		
	OnPCDieEvent:
		MAX_STREAK = 0;
		end;
}

// PVP_PLAYER
// CID,RANKING,PONTOS,KILLS,DEATH,KILL_RECORD,DEATH_RECORD

// getarg(0) = Função
//
// getarg(1) = LoadPlayerData
// getarg(1) = GetCharRanking( char_id )
//             
function	script	pvp	{
	
	.@func$ = getarg(0);
	
	.@tpvp_p$ = "`pvp_player`";
	
	if( .@func$ == "LoadPlayerData" )
	{
		.@cid    = getarg(1);
		
		.@query$ = "SELECT p.anunciador,                                    " +
		           "       p.ranking,                                       " +
		           "       p.pontos,                                        " +
				   "	   p.abates,    p.mortes,                           " +
				   "	   p.recabates, p.recmortes,                        " +
				   "       r.cash,      r.vip_chance, r.mastery             " +
				   "  FROM %s p                                             " +
				   "  LEFT JOIN `pvp_prizetoget` r ON r.char_id = p.char_id " +
				   " WHERE p.char_id = %d           ";
				   
		.@q = query_sql( sprintf( .@query$, .@tpvp_p$, .@cid ),
		                 .@announcer,
						 .@ranking,
					     .@pontos,
					     .@abates, .@mortes,
					     .@recabates, .@recmortes,
					     .@cash,      .@vip_chance, .@mastery );
		
		if( .@q == 0 )
			query_sql( sprintf( "INSERT INTO %s ( `char_id` ) VALUES ( %d )", .@tpvp_p$, .@cid ) );
		
		PVP_ANNOUNCER = .@announcer;
		PVP_RANKING   = .@ranking;
		PVP_POINTS    = .@pontos;
		PVP_KILLS     = .@abates;
		PVP_DEATHS    = .@mortes;
		PVP_MAXSTREAK = .@recabates;
		
		changetitle( PVP_RANKING, .@cid );

		if( .@cash > 0 )
		{

			set( #CASHPOINTS, .@cash, .@cid );

			.@getvip = ( rand( 1, .@vip_chance ) >= rand( 1, 100 ) );

			if( .@getvip && getgroupid() != 99 )
				vip_time 10080, strcharinfo(0, .@cid);
							
			dispbottom "--------------------------------------------------",0x6495ED,.@cid;
			dispbottom "Seu Ranking foi resetado para [" + .rank_name[0] + "]",0x6495ED,.@cid;
			dispbottom "Cash Recebido: " + .@cash,0x6495ED,.@cid;
			dispbottom "Recebeu 1 Semana VIP: " + ( .@getvip ? "SIM" : "NÃO" ),0x6495ED,.@cid;
			dispbottom "Pontos de Maestrias de Evento: " + .@mastery,0x6495ED,.@cid;
			dispbottom "--------------------------------------------------",0x6495ED,.@cid;

			query_sql( "DELETE FROM `pvp_prizetoget` WHERE `char_id` = " + .@cid );
		}
		
		return;
	}
	
	announce "[Function - pvp]: Erro ao chamar função " + .@func$,0;
	return;

}