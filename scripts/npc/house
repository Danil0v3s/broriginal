
/*

 <house_mobilia>
 
 id         = ID da Mobilia
 npc_name   = Nome do NPC Original
 color      = Código da Cor
 name       = Nome da Mobilia
 desc       = Descrição
 categoria  = Categoria da Mobilia (Tapetes, Cadeiras.. e etc)
 sprite_1   = Sprite do Mob Normal
 sprite_2   = Sprite do Mob Invertida
 material   = ID dos Ingredientes (ITEM_ID:QTD|ITEM_ID:QTD...)
 craft_time = Tempo de Craft em Segundos
 
 <house_account>

 account_id = ID da Conta
 status  = 0: Guardada
           1: Posta
 sprite  = Sprite do NPC da Casa
 locked  = 0: Aberto para Todos
           1: Trancado para Todos
		2: Liberado somente para amigos
		3: Por senha
 senha   = Senha caso locked seja igual a (3)
 mapa    = Mapa onde está montado
 x       = Coordenada x de onde está montado
 y       = Coordenada y de onde está montado
 mapid   = ID do Mapa Copiado
 npcid   = ID do NPC Gerado
 
 <house_data>

 id         = Id (Auto Increment)
 account_id    = Id da Conta
 mobilia_id = ID da Mobília
 status     = 0: Desativada
              1: Ativada
 x          = X de onde a mobilia está na casa
 y          = y de onde a mobilia está na casa
 dir        = Direção
 dir_type   = Se é a sprite_1 ou sprite_2 que será mostrada
 obj_data   = Valor extra para alguma função
 
*/

function	Script	init_house	{

	query_sql( "UPDATE `house_account`   " +
		       "   SET `mapid` = '0', " + 
			   "       `npcid` = '0'  " );
				  
	//query_sql( "UPDATE `h_mobilia` SET `extra2`= '0' ");
	
	return;
}

//*del_house
// Deleta uma casa
function	Script	del_house	{
	
	.@account_id  = getarg(0);
	.@hard_remove = getarg(1); // True caso o jogador realmente esteja removendo a tenda e não só deslogando
	
	if( .@account_id == 0 ) return;

	.@char_id = rid2cid( .@account_id );

	.@query$ = sprintf( "SELECT `mapid`             " +
	                    "       `npcid`             " +
						"  FROM `house_account`     " +
						" WHERE `account_id` = '%d' ", .@account_id );
						
	query_sql( .@query$, .@mapid, .@npcid );
	
	duplicateremove( strnpcinfo( 0, .@npcid ) );
	
	.@query$ = sprinf( "UPDATE `house_account` " +
	                   "   SET `mapid` = '0',  " +
					   "       `npcid` = '0'   " +
					   ( .@hard_remove ? ", `status` = '0' " : "" )
					   " WHERE `account_id` = '%d' ", .@account_id );

	query_sql( .@query$ );
	
	// Removendo Walls de Paredes
	
	.@quey$ = sprintf( "SELECT hd.id                                            " +
	                   "  FROM `house_data` hd                                  " +
					   " INNER JOIN `house_mobilia` hm ON hm.id = hd.mobilia_id " +
					   "                              AND hm.categoria = '%d'   " +
					   " WHERE `account_id` = '%d' ", MOBILIA_CATEGORIA_PAREDE, .@account_id );
					   
	.@walls = query_sql( .@query$, .@wall );

	for( .@i = 0; .@i < .@walls; .@i++ )
		delwall "H" + .@wall[.@i];
		
	delmap( "H" + .@account_id );

	return;
}

//*add_house
// Cria uma tenda e carrega os npcs dentro dela
function	Script	add_house	{

	.@account_id = getarg(0);
	
	if( .@account_id == 0 ) return;
	
	.@char_id = rid2cid( .@account_id );
	
	if( .@char_id == 0 ) return;
	
	if( strcharinfo( 3, .@char_id ) != "phtownall" )
	{
		megdisp .@char_id,"#ERRO#Não é permitido montar uma Tenda neste mapa!";
		return;
	}

	.@map$ = "phtownall";
	
	.@query$ = sprintf( "SELECT `status`,        " +
		                "  FROM `house_account`     " +
					    " WHERE `account_id` = '%d' ", .@account_id );
	
	.@q = query_sql( .@query$, .@status );
	
	if( !.@q )
	{
		.@query$ = sprinf( "INSERT INTO `house_account` ( `account_id`, `status`, `sprite`, `locked` ) " +
		                   "     VALUES ( '%d', '%d', '%d', '%d' ) ", .@account_id, HOUSE_MOUNTED, HOUSE_SPRITE_DEFAULT, HOUSE_LOCK_NONE );
		
		query_sql( .@query$ );
		
		.@query$ = sprintf( "INSERT INTO `house_data` ( `account_id`, `mobilia_id`, `status`, `x`, `y`, `dir` ) " +
		                    "     VALUES ( '%d', '%d', '%d', '%d', '%d', '%d' ) ", 
							.@account_id, MOBILIA_CRAFTMAKE, HOUSE_MOB_ACTIVE,
							MOBILIA_CRAFTMAKE_DEFX, MOBILIA_CRAFTMAKE_DEFY, MOBILIA_CRAFTMAKE_DEFD );
		
		query_sql( .@query$ );
	}
	else
	{
		.@query$ = sprintf( "UPDATE `house_account`     " +
		                    "   SET `status`  = '%d' " +
							" WHERE `account_id` = '%d' ", HOUSE_MOUNTED, .@account_id );
		
		query_sql( .@query$ );
	}
	
	if( playerattached() > 0 )
	{
		getmapxy( .@m$, .@x, .@y, BL_PC );
		
		.@y -= 2;
	  
		.@query$ = sprintf( "UPDATE `house_account`     " +
		                    "   SET `mapa`    = '%s',   " +
							"       `x`       = '%d',   " +
							"       `y`       = '%d'    " +
							" WHERE `account_id` = '%d' ",
							.@map$, .@x, .@y, .@account_id );
							
		query_sql( .@query$ );
	}
	
	.@query$ = sprtinf( " SELECT `sprite`,           " +
	                    "        `mapa`, `x`, `y`    " +
	                    "   FROM `house_account`     " +
			            "  WHERE `account_id` = '%d' ",
						.@account_id );
						
	query_sql( .@query$, .@sprite, .@map$, .@x, .@y );
	
	.@house_name$ = sprinf( "Casa de %s", rid2name( .@account_id ) );
	
	.@npc_id = duplicatecreate( "House_NPC", .@house_name$, "", .@map$, .@x, .@y, 5, .@sprite, 0, 0, .@account_id );
	
	if( .@npc_id <= 0 )
	{
		megdisp .@char_id, "#ERRO#Aconteceu um erro grave no sistema de tendas! Contate a Equipe!";
		return;
	}
	
	.@house_map$  = "H" + .@account_id;
	.@house_mapid = clonemap( "house", .@house_map$ );
	
	set( @HOUSE_MAPID, .@house_mapid, .@account_id );
	
	.@query$ = sprintf( "UPDATE `house_account`         " +
		                "   SET `mapid`       = '%d',   " +
						"       `npcid`       = '%d',   " +
						" WHERE `account_id`     = '%d' ",
						.@house_mapid, .@npcid, .@account_id );
	
	query_sql( .@query$ );
	
	//Adicionando NPC's ao Mapa
	
	if( .@sprite == HOUSE_SPRITE_DEFAULT )
	{
		.@outx = HOUSE_SPRITE_DEFAULT_X;
		.@outy = HOUSE_SPRITE_DEFAULT_Y;
	}
	
	// NPC de Saída
	duplicatecreate( "House_NPC_Out", "Saída", .@house_map$, .@house_map$, .@outx, .@outy, 5, 45, 1, 1, .@account_id );

	.@query$ = sprintf( "SELECT hd.id,                                           " +
						"       hd.mobilia_id,                                   " +
						"       hm.npc_name,                                     " +
						"       hm.name,                                         " +
						"       hm.categoria,                                    " +
						"       hd.x,                                            " +
						"       hd.y,                                            " +
						"       hd.dir,                                          " +
						"       hd.dir_type,                                     " +
						"       hm.sprite_1,                                     " +
						"       hm.sprite_2,                                     " +
						"       hd.obj_data                                      " +
						"  FROM `house_data` hd                                  " +
						" INNER JOIN `house_mobilia` hm ON hm.id = hd.mobilia_id " +
						" WHERE hd.account_id = '%d' ", .@account_id );
						
	.@mob_count = query_sql( .@query$,
	                         .@id,        .@mobilia_id,
							 .@npc_name$, .@name$,
							 .@categoria,
							 .@x,         .@y,
							 .@dir,       .@dir_type,
							 .@sprite_1,  .@sprite_2,
							 .@obj_data$ );
							 
	for( .@i = 0; .@i < .@mob_count; .@i++ )
	{
		// Mudança na Sprite Invertida
		if( .@dit_type[.@i] == 0 && .@sprite_2[.@i] > 0 )
			.@sprite = .@sprite_2[.@i];
		else
			.@sprite = .@sprite_1[.@i];
		
		if( .@categoria[.@i] == MOBILIA_CATEGORIA_PAREDE )
		{
			.@dir = 6;
			
			setwall( .@house_map$, .@x[.@i], .@y[.@i], 1, 1, 1, "H" + .@id[.@i] );	
		}
		
		duplicatecreate( .@npc_name$[.@i], .@name$[.@i], .@id[.@i], .@house_map$, .@x[.@i], .@y[.@i], .@dir[.@i], .@sprite, 0, 0, .@account_id );
	}
	
	debugmes( "Tenda","Carregado a tenda do jogador " + strcharinfo( 0, .@char_id ) ) + " com " + .@mob_count + " objetos.";
	
	return;
}

function	Script	housewarp	{
	
	.@account_id = getarg(0);
	.@npc_id     = getarg(1);
	.@type       = getarg(2); // IN, OUT
	
	.@owner_gid = getowner( .@npc_id );
	.@map$ = "H" + .@owner_gid;
	
	.@query$ = sprintf( "SELECT `sprite`, `x`, `y`  " +
	                    "  FROM `house_account`     " +
						" WHERE `account_id` = '%d' ",
						.@owner_gid );
	
	query_sql( .@sprite, .@x, .@y );
	
	if( .@type == IN )
	{
		if( .@sprite == HOUSE_SPRITE_DEFAULT )
		{
			.@x = 27;
			.@y = 10;
		}
		else
			return;
		
		warp( .@map$, .@x, .@y );
	}
	else
		warp( "phtownall", .@x, .@y );
	
	return;
}

//*houseinfo
// Retorna alguma informação da casa do jogador
function	Script	houseinfo	{

	.@account_id = getarg(0);
	.@info       = getarg(1);
	
	.@char_id    = rid2cid( .@account_id );

	if( getargcount() >= 3 )
		.@param1 = getarg(2);
	
	// MAP_NAME|X|Y
	if( .@info == HOUSEINFO_MAPOUT )
	{
		.@query$ = sprintf( "SELECT `mapa`, `x`, `y`    " +
		                    "  FROM `house_account`     " +
							" WHERE `account_id` = '%d' ", .@account_id );
							
		query_sql( .@query$, .@mapa$, .@x, .@y );

		return sprinf( "%s|%d|%d", .@mapa$, .@x, .@y );
	}
	
	if( .@info == HOUSEINFO_STATUS )
	{
		.@query$ = sprintf( "SELECT `status`            " +
		                    "  FROM `house_account`     " +
							" WHERE `account_id` = '%d' ", .@account_id );
							
		query_sql( .@query$, .@house_status );
		
		return .@house_status;
	}
	
	// .@param1 -> NPC GID
	// Retorna o account_id ao invés do GID
	if( .@info == HOUSEINFO_OWNER )
	{
		.@owner_gid = getowner( .@param1 );
		
		if( .@owner_gid <= 0 )
		{
			megdisp( .@char_id, "#ERRO#Falha ao obter o Owner Gid associado a este Objeto [1]" );
			end;
		}
		
		return .@owner_gid;
	}

	// .@param1 -> NPC GID
	if( .@info == HOUSEINFO_LOCK )
	{
		.@owner_gid = getowner( .@param1 );
		
		if( .@owner_gid <= 0 )
		{
			megdisp( .@char_id, "#ERRO#Falha ao obter o Owner Gid associado a este Objeto [2]" );
			end;
		}
		
		.@query$ = sprintf( "SELECT `locked`,           " +
		                    "       `senha`             " +
				            "  FROM `house_account`     " +
				            " WHERE `account_id` = '%d' ", .@owner_gid );
							
		query_sql( .@query$, .@locked, .@senha );

		return ( .@locked == HOUSE_LOCK_PASSWORD ) ( .@senha + 100 ) : .@locked;
	}
	
	return 0;
}

//*opentable

//Categorias:
// MOBILIA_CATEGORIA_CRAFTTABLE = Mesa de Construção
// MOBILIA_CATEGORIA_CAMA = Cama
// MOBILIA_CATEGORIA_ESTANDE = Estande
// MOBILIA_CATEGORIA_MESA = Mesas
// MOBILIA_CATEGORIA_PAREDE = Parede (Especial Manipulação)
// MOBILIA_CATEGORIA_RACK = Racks
// MOBILIA_CATEGORIA_ALMOFADA = Almofadas
// MOBILIA_CATEGORIA_ARMARIO = Armários
// MOBILIA_CATEGORIA_SOFA = Poltronas/Sofás
function	Script	opentable	{

	.@account_id = getarg(0);
	
	setarray .@menuCateg$,"^B22222Paredes^000000:^2E8B57Camas^000000:^A0522DEstante de Livros^000000:^B8860BMesas^000000:^B8860BRacks^000000:^D02090Almofadas^000000:^8B0000Armários^000000:^8B814CSofás/Cadeiras^000000";
	setarray .@menuCategID[1],MOBILIA_CATEGORIA_PAREDE,MOBILIA_CATEGORIA_CAMA,MOBILIA_CATEGORIA_ESTANDE,MOBILIA_CATEGORIA_MESA,MOBILIA_CATEGORIA_RACK,MOBILIA_CATEGORIA_ALMOFADA,MOBILIA_CATEGORIA_ARMARIO,MOBILIA_CATEGORIA_SOFA;
		
	L_CraftVoltar:
	
	.@qnt = getarraysize( .@menuCraft ) + 10;
	
	if( .@qnt > 0 )
	{
		deletearray .@id[0],.@qnt;
		deletearray .@npc_name$[0],.@qnt;
		deletearray .@color$[0],.@qnt;
		deletearray .@name$[0],.@qnt;
		deletearray .@desc$[0],.@qnt;
		deletearray .@categoria[0],.@qnt;
		deletearray .@sprite[0],.@qnt;
		deletearray .@material$[0],.@qnt;
		deletearray .@craft_time[0],.@qnt;
	}
	
	.@escolhaMenu = select( .@menuCateg$ );
	
	.@query$ = sprintf( "SELECT `id`,              " +
	                    "       `npc_name`,        " +
						"       `color`,           " +
						"       `name`,            " +
						"       `descricao`,       " +
						"       `categoria`,       " +
						"       `sprite_1`,        " +
						"       `material`,        " +
						"       `craft_time`       " +
	                    "  FROM `house_mobilia`    " +
						" WHERE `categoria` = '%d' ", .@menuCategID[.@escolhaMenu] );
						
	.@menuCraft = query_sql( .@query$,
	                         .@id,
	                         .@npc_name$,
							 .@color$,
							 .@name$,
							 .@desc$,
							 .@categoria,
							 .@sprite,
							 .@material$,
							 .@craft_time );
 
	for( .@i = 0; .@i < .@menuCraft; .@i++ )
		.@menuObjs$ += sprintf( "^%s%s^000000:", .@color$[.@i], .@name$[.@i] ) + ( .@i == .@menuCraft ? ":Voltar" : ":" );
	
	.@menuObjetoSel = select(.@menuObjs$);
	
	.@debugMenu = getarraysize(.@menuCraft) + 2;
				
	if( .@menuObjetoSel == .@debugMenu ) goto L_CraftVoltar;
	
	.@menuObjetoSel--;
	
	deletearray( .@itens$[0], 10 );
	
	explode( .@itens$, .@material$[.@menuObjetoSel], "|" );
	
	.@n$ = "[^8B4513Mesa de Construção^000000]";
	
	L_escolhaObj:
	mes .@n$;
	mes "^556B2FNome^000000: "+ .@mob_name_c$[.@menuObjetoSel];
	mes "^556B2FDescrição^000000: " + .@mob_desc$[.@menuObjetoSel];
	mes " ";
	mes "^556B2FMateriais Necessários^000000: ";
	
	.@text$ = "> %s [%d/%d]";
	
	for( .@i = 0; .@i < getarraysize( .@itens$ ); .@i++ )
	{
		deletearray( .@item_data$[0], 5 );
		
		explode( .@item_data$, .@itens$[.@i], ":" );
		
		.@item_id  = atoi( .@item_data$[0] );
		.@item_qtd = atoi( .@item_data$[1] );
		
		mes sprintf( .@text$, getitemname( .@item_id ), countitem( .@item_id ), .@item_qtd );
		
		if( countitem( .@item_id ) < .@item_qtd ) .@naoTemTudo = 1;
	}
	
	mes " ";
	mes "^556B2FTempo de Construção^000000: " + .@craft_time[.@menuObjetoSel];
	
	switch( select( (.@naoTemTudo == 1 ? "^FF0000" : "^2E8B57") +"Construir^000000","^A52A2AVoltar^000000","^8B7D7BCancelar^000000" ) )
	{
		case 1:
			next;
			mes .@n$;
			
			if(.@naoTemTudo == 1)
			{
				mes "Materiais insuficiente para criar este objeto.";
				next;
				goto L_escolhaObj;
			}
			
			close2;
			progressbar( "1", .@craft_time[.@menuObjetoSel] );
			
			for( .@d = 0; .@d < getarraysize( .@itens$ ); .@d++ )
			{
				deletearray( .@item_data$[0], 5 );
		
				explode( .@item_data$, .@itens$[.@d], ":" );
				
				.@item_id  = atoi( .@item_data$[0] );
				.@item_qtd = atoi( .@item_data$[1] );
		
				delitem( .@item_id, .@item_qtd );
				delitem( .@item_id, .@item_qtd );
			}
			
			getmapxy( .@m$, .@x, .@y, BL_PC );
	}
}

-	Script	house_core	-1,{

	OnInit:
		init_house();
		end;
		
	
}